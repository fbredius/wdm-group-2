services:

  gateway:
    image: nginx
    depends_on:
      - order-service
      - payment-service
      - stock-service
    volumes:
      - ./gateway_nginx.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "8000:80"

  order-service:
    build: ./order
    image: ptemarvelde/wdm-2022:order
    environment:
      - GATEWAY_URL=http://gateway:80
      - LOG_LEVEL=DEBUG
    #    command: gunicorn -b 0.0.0.0:5000 app:app --timeout 0
    command: uvicorn app:app --host 0.0.0.0 --port 5000
    depends_on:
      order-postgres-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - env/order_postgres.env

  order-postgres-service:
    image: postgres:14.1-alpine
    env_file:
      - env/order_postgres.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  stock-service:
    build: ./stock
    image: ptemarvelde/wdm-2022:stock
    environment:
      - GATEWAY_URL=http://gateway:80
      - LOG_LEVEL=DEBUG
    depends_on:
      stock-postgres-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
#    command: gunicorn -b 0.0.0.0:5000 app:app --timeout 0
    command: uvicorn app:app --host 0.0.0.0 --port 5000
    env_file:
      - env/stock_postgres.env

  stock-postgres-service:
    image: postgres:14.1-alpine
    env_file:
      - env/stock_postgres.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  stock-queue:
    build: ./stock
    image: ptemarvelde/wdm-2022:stock-queue
    command: python consumer.py
    depends_on:
      stock-postgres-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - LOG_LEVEL=INFO
    env_file:
      - env/stock_postgres.env

  payment-service:
    build: ./payment
    image: ptemarvelde/wdm-2022:user
    #    command: gunicorn -w 4 -b 0.0.0.0:5000 app:app --worker-class uvicorn.workers.UvicornWorker
    command: uvicorn app:app --host 0.0.0.0 --port 5000
    depends_on:
      payment-postgres-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - LOG_LEVEL=DEBUG
    env_file:
      - env/payment_postgres.env

  payment-postgres-service:
    image: postgres:14.1-alpine
    env_file:
      - env/payment_postgres.env
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB" ]
      interval: 5s
      timeout: 5s
      retries: 5

  payment-queue:
    build: ./payment
    image: ptemarvelde/wdm-2022:payment-queue
    command: python consumer.py
    depends_on:
      stock-postgres-service:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    environment:
      - LOG_LEVEL=INFO
    env_file:
      - env/payment_postgres.env

  rabbitmq:
    image: 'rabbitmq:3.10-management'
    ports:
      - '5672:5672'
      - '15672:15672'
    healthcheck:
      test: [ "CMD-SHELL", "rabbitmq-diagnostics -q check_port_connectivity" ]
      interval: 5s
      timeout: 5s
      retries: 5